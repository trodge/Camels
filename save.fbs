namespace Save;

struct PerishCounter {
    time:int;
    amount:double;
}

struct CombatStat {
    statId:uint;
    partId:uint;
    attack:uint;
    type:uint;
    speed:uint;
    bashDefense:uint;
    cutDefense:uint;
    stabDefense:uint;
}

struct GoodInfo {
    fullId:uint;
    limitFactor:double;
    minPrice:double;
    maxPrice:double;
    estimate:double;
    buy:double;
    sell:double;
}


table Good {
    goodId:uint;
    materialId:uint;
    fullId:uint;
    goodName:string;
    materialName:string;
    amount:double;
    perish:double;
    carry:double;
    measure:string;
    consumptionRate:double;
    demandSlope:double;
    demandIntercept:double;
    perishCounters:[PerishCounter];
    combatStats:[CombatStat];
    ammoId:uint;
}

table Property {
    townId:uint;
    townType:uint;
    coastal:bool;
    population:ulong;
    goods:[Good];
    businesses:[Business];
    updateCounter:int;
}

table AI {
    decisionCounter:int;
    decisionCriteria:[double];
    goodsInfo:[GoodInfo];
}

table Traveler {
    name:string;
    toTown:uint;
    fromTown:uint;
    nation:uint;
    log:[string];
    longitude:double;
    latitude:double;
    properties:[Property];
    stats:[uint];
    parts:[uint];
    equipment:[Good];
    ai:AI;
    moving:bool;
}

table Business {
    id:uint;
    mode:uint;
    name:string;
    area:double;
    canSwitch:bool;
    requireCoast:bool;
    keepMaterial:bool;
    requirements:[Good];
    reclaimables:[Good];
    inputs:[Good];
    outputs:[Good];
    frequency:double;
    reclaimFactor:double;
}

table Town {
    id:uint;
    names:[string];
    nation:uint;
    longitude:double;
    latitude:double;
    property:Property;
}

table Route {
    towns:[uint];
}

table Game {
    towns:[Town];
    routes:[Route];
    playerTraveler:Traveler;
    aITravelers:[Traveler];
}

root_type Game;  
